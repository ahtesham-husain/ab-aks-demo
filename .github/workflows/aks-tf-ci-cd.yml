name: 2-actions-ci-cd-aks-tf

on:
  push:
    branches: none
    paths: .github/workflows/ci-cd-aks.yml
  pull_request:
    branches:  none 
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  build-deploy-aks:
    runs-on: ubuntu-latest
    env:
      REGISTRY_NAME: aksdemoacr123
      APP_NAME: php-apache
      App_TAG: "1.1"
     
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
               
    steps:

    - uses: actions/checkout@v2
  
    # Connect to Azure Container Registry (ACR)
    - uses: azure/docker-login@v1
      with:
       login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
       username: ${{ secrets.DOCKER_REPOSITORY_USERNAME }} 
       password: ${{ secrets.DOCKER_REPOSITORY_PASSWORD }}
    
    # Container build and push to a Azure Container Registry (ACR)
    - run: |
        docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ env.App_TAG }}
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ env.App_TAG }}
    

    # Install the latest version of Terraform CLI
    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2.0.0
     
        
    - name: Terraform Init
      id: init
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      run:
        terraform init

    - name: Terraform Plan
      id: plan
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      run: |
        terraform plan -no-color 

    - name: Terraform Apply
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      run: terraform apply -auto-approve

    # Set the target AKS cluster.
    - uses: Azure/aks-set-context@v1
      with:
       creds: '${{ secrets.AZURE_CREDENTIALS }}'
       cluster-name: ab-aks-demo-cluster
       resource-group: ab-aks_demo_rg
             
    - uses: Azure/k8s-deploy@v1
      with:
        manifests: |
          php-apache.yaml
          php-apache-hpa.yaml